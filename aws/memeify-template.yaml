AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM template that creates the Memeify S3 output bucket, Memeify Lambda function, and an API Gateway POST method
  for receiving images
Parameters:
  MemeifyCodeBucket:
    Type: String
    Description: "name of S3 bucket containing the memeify lambda .jar file"
  MemeifyCodeKey:
    Type: String
    Description: "name of the memeify lambda .jar"
    Default: "memeify-lambda-0.1.jar"

Globals:
  Api:
    # API Gateway regional endpoints
    EndpointConfiguration: REGIONAL

    # tells the browser to allow code from any origin to access a resource
    Cors:
      AllowOrigin: "'*'"

    # needed so that multipart/form-data will be base64 encoded by API Gateway, (the ~1 is converted to a slash)
    BinaryMediaTypes:
      - multipart~1form-data

Resources:
  # create a bucket, with public read access, that stores the final "memeified" images
  ImageOutputBucket:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false

  # allows public get object permissions on the ImageOutputBucket
  PublicGetObjectPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: ImageOutputBucket
      PolicyDocument:
        Statement:
          - Action:
              - "s3:GetObject"
            Effect: "Allow"
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:s3:::"
                  - Ref: ImageOutputBucket
                  - "/*"
            Principal: "*"

  MemeifyLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.cliff.memeify.Handler::handleRequest
      Runtime: java17
      Timeout: 30
      MemorySize: 256
      CodeUri:
        Bucket: !Ref MemeifyCodeBucket
        Key: !Ref MemeifyCodeKey
      #see https://github.com/awslabs/serverless-application-model/blob/master/docs/safe_lambda_deployments.rst#instant-traffic-shifting-using-lambda-aliases
#      AutoPublishAlias: live
#      DeploymentPreference:
#        Type: AllAtOnce
#        Hooks:
#          PreTraffic: !Ref MemeifyPreTrafficHook
      Policies:
        # Give this lambda write access to cloudwatch logs
        - AWSLambdaBasicExecutionRole
        # Gives the lambda CRUD permissions to objects in the S3 Bucket
        - S3CrudPolicy:
            BucketName: !Ref ImageOutputBucket
      Environment:
        Variables:
          OUTPUT_BUCKET_NAME: !Ref ImageOutputBucket
          MAX_BODY_SIZE_MB: 10
      # configure the lambda to be triggered by a POST request to API Gateway
      Events:
        MemeifyApiPostEvent:
          Type: Api
          Properties:
            Path: /memeify
            Method: Post

#  MemeifyPreTrafficHook:
#    Type: AWS::Serverless::Function
#    Properties:
#      # the default policy created by SAM grants permission to run functions that begin with 'CodeDeployHook'
#      FunctionName: CodeDeployHook_memeifyValidationHook
#      Handler: com.cliff.memeify.hooks.MemeifyValidationHook
#      Runtime: java8
#      Timeout: 30
#      MemorySize: 256
#      CodeUri:
#        Bucket: !Ref MemeifyCodeBucket
#        Key: !Ref MemeifyCodeKey
#      Environment:
#        Variables:
#          MEMEIFY_NEW_VERSION: !Ref MemeifyLambda.Version
#      DeploymentPreference:
#        Enabled: false
#      Policies:
#        - AWSLambdaBasicExecutionRole
#        - Version: "2012-10-17"
#          Statement:
#            - Effect: "Allow"
#              Action:
#                - "codedeploy:PutLifecycleEventHookExecutionStatus"
#              Resource:
#                !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:${ServerlessDeploymentApplication}/*'
#        # this policy gives our MemeifyPreTrafficHook permission to invoke the newly deployed Memeify lambda
#        - Version: "2012-10-17"
#          Statement:
#            - Effect: "Allow"
#              Action:
#                - "lambda:InvokeFunction"
#              Resource: !Ref MemeifyLambda.Version

Outputs:
  LambdaArn:
    Value: !GetAtt MemeifyLambda.Arn
  OutputBucketName:
    Value: !Ref ImageOutputBucket
  ApiUrl:
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Stage/memeify"

